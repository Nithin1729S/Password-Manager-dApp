{"ast":null,"code":"var _jsxFileName = \"/home/nithin/Codes/Projects/PasswordManager/src/components/Passwords.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport moment from 'moment';\nmoment().utcOffset(330).format();\nimport \"../stylesheet/style.css\";\nimport deleteLogo from '../images/delete.png';\nimport editLogo from '../images/edit.png';\nimport saveLogo from '../images/save.png';\nimport cancelLogo from '../images/cancel.png';\nimport '../stylesheet/passwords.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Passwords = _ref => {\n  _s();\n  let {\n    passwords,\n    account,\n    deletePassword,\n    editPassword,\n    getProfile\n  } = _ref;\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n  const [visiblePasswords, setVisiblePasswords] = useState({});\n  const handleEdit = (passwordId, content, author) => {\n    if (author === account) {\n      setEditMode(passwordId);\n      setNewContent(content);\n    }\n  };\n  const handleSaveEdit = (passwordId, author) => {\n    if (author === account) {\n      editPassword(passwordId, newContent);\n      setEditMode(null);\n      setNewContent(\"\");\n    }\n  };\n  const renderEditButtons = password => {\n    if (editMode === password.id) {\n      return null; // Don't render edit and delete buttons during editing\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(password.id, password.content, password.author),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: editLogo,\n            alt: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePassword(password.id),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: deleteLogo,\n            alt: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tweetsContainer\",\n    children: passwords.map(password => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"user-icon\",\n        src: \"https://api.multiavatar.com/\".concat(password.username, \".svg\"),\n        alt: \"User Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: password.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), editMode === password.id && password.author === account ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editArea\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newContent,\n            onChange: e => setNewContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSaveEdit(password.id, password.author),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: saveLogo,\n              alt: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditMode(null),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cancelLogo,\n              alt: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: \"Username:\".concat(password.username)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: \"Site:\".concat(password.site)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: \"Notes:\".concat(password.notes)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: \"Password :\".concat(password.content)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: new moment(Number(password.timestamp) * 1000).toLocaleString().split(' GMT')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), account === password.author && renderEditButtons(password)]\n    }, password.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Passwords, \"o7qcr69BGQp8rgemn5pe34ef30o=\");\n_c = Passwords;\nexport default Passwords;\nvar _c;\n$RefreshReg$(_c, \"Passwords\");","map":{"version":3,"names":["useState","useEffect","moment","utcOffset","format","deleteLogo","editLogo","saveLogo","cancelLogo","jsxDEV","_jsxDEV","Fragment","_Fragment","Passwords","_ref","_s","passwords","account","deletePassword","editPassword","getProfile","editMode","setEditMode","newContent","setNewContent","visiblePasswords","setVisiblePasswords","handleEdit","passwordId","content","author","handleSaveEdit","renderEditButtons","password","id","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","concat","username","displayName","value","onChange","e","target","site","notes","Number","timestamp","toLocaleString","split","_c","$RefreshReg$"],"sources":["/home/nithin/Codes/Projects/PasswordManager/src/components/Passwords.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport moment from 'moment';\nmoment().utcOffset(330).format()\nimport \"../stylesheet/style.css\";\nimport deleteLogo from '../images/delete.png';\nimport editLogo from '../images/edit.png';\nimport saveLogo from '../images/save.png';\nimport cancelLogo from '../images/cancel.png';\nimport '../stylesheet/passwords.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\n\n\nconst Passwords = ({ passwords, account, deletePassword, editPassword, getProfile }) => {\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n  const [visiblePasswords, setVisiblePasswords] = useState({});\n  \n  const handleEdit = (passwordId, content, author) => {\n    if (author === account) {\n      setEditMode(passwordId);\n      setNewContent(content);\n    }\n  };\n\n  const handleSaveEdit = (passwordId, author) => {\n    if (author === account) {\n      editPassword(passwordId, newContent);\n      setEditMode(null);\n      setNewContent(\"\");\n    }\n  };\n\n  const renderEditButtons = (password) => {\n    if (editMode === password.id) {\n      return null; // Don't render edit and delete buttons during editing\n    } else {\n      return (\n        <div className=\"tweet-actions\">\n          <button onClick={() => handleEdit(password.id, password.content, password.author)}>\n            <img src={editLogo} alt=\"Edit\" />\n          </button>\n          <button onClick={() => deletePassword(password.id)}>\n            <img src={deleteLogo} alt=\"Delete\" />\n          </button>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div id=\"tweetsContainer\">\n      {passwords.map((password) => (\n        <div key={password.id} className=\"tweet\">\n          <img\n            className=\"user-icon\"\n            src={`https://api.multiavatar.com/${password.username}.svg`}\n            alt=\"User Icon\"\n          />\n          <div className=\"tweet-inner\">\n            <div className=\"author\">{password.displayName}</div>\n            {(editMode === password.id && password.author === account) ? (\n              <div className=\"editArea\">\n                <textarea\n                  value={newContent}\n                  onChange={(e) => setNewContent(e.target.value)}\n                />\n                <button onClick={() => handleSaveEdit(password.id, password.author)}>\n                  <img src={saveLogo} alt=\"Save\" />\n                </button>\n                <button onClick={() => setEditMode(null)}>\n                  <img src={cancelLogo} alt=\"Cancel\" />\n                </button>\n              </div>\n            ) : (\n              <>\n                <div className=\"content\">{ `Username:${password.username}`}</div>\n                <div className=\"content\">{ `Site:${password.site}`}</div>\n                <div className=\"content\">{ `Notes:${password.notes}`}</div>\n                <div className=\"content\">{ `Password :${password.content}`}</div>\n                <div className=\"date\">{new moment(Number(password.timestamp) * 1000).toLocaleString().split(' GMT')[0]}</div>\n              </>\n            )}\n          </div>\n          {account === password.author && renderEditButtons(password)}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Passwords;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}