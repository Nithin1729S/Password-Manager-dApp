{"ast":null,"code":"var _jsxFileName = \"/home/nithin/Codes/Projects/PasswordManager/src/components/Passwords.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport moment from 'moment';\nmoment().utcOffset(330).format();\nimport \"../stylesheet/style.css\";\nimport deleteLogo from '../images/delete.png';\nimport editLogo from '../images/edit.png';\nimport saveLogo from '../images/save.png';\nimport cancelLogo from '../images/cancel.png';\nimport '../stylesheet/passwords.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Passwords = _ref => {\n  _s();\n  let {\n    passwords,\n    account,\n    deletePassword,\n    editPassword,\n    getProfile\n  } = _ref;\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n  const [userProfile, setUserProfile] = useState(\"\");\n  useEffect(() => {\n    async function fetchProfile() {\n      if (account) {\n        try {\n          const profile = await getProfile(account);\n          setUserProfile(profile);\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      }\n    }\n    fetchProfile();\n  }, [account, getProfile]);\n  const handleEdit = (passwordId, content, author) => {\n    if (author === account) {\n      setEditMode(passwordId);\n      setNewContent(content);\n    }\n  };\n  const handleSaveEdit = (passwordId, author) => {\n    if (author === account) {\n      editPassword(passwordId, newContent);\n      setEditMode(null);\n      setNewContent(\"\");\n    }\n  };\n  const renderEditButtons = password => {\n    if (editMode === password.id) {\n      return null; // Don't render edit and delete buttons during editing\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(password.id, password.content, password.author),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: editLogo,\n            alt: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePassword(password.id),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: deleteLogo,\n            alt: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tweetsContainer\",\n    children: passwords.map(password => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"user-icon\",\n        src: \"https://api.multiavatar.com/\".concat(password.author, \".svg\"),\n        alt: \"User Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: password.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), editMode === password.id && password.author === account ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editArea\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newContent,\n            onChange: e => setNewContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSaveEdit(password.id, password.author),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: saveLogo,\n              alt: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditMode(null),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cancelLogo,\n              alt: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: password.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: new moment(Number(password.timestamp) * 1000).toLocaleString().split(' GMT')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display\n            },\n            children: document.querySelector(\"#userAddress\").innerHTML = \"Connected : \".concat(userProfile)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), account === password.author && renderEditButtons(password)]\n    }, password.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Passwords, \"MsARvVx3ajq6aRCHTU2JGRkIPx4=\");\n_c = Passwords;\nexport default Passwords;\nvar _c;\n$RefreshReg$(_c, \"Passwords\");","map":{"version":3,"names":["useState","useEffect","moment","utcOffset","format","deleteLogo","editLogo","saveLogo","cancelLogo","jsxDEV","_jsxDEV","Fragment","_Fragment","Passwords","_ref","_s","passwords","account","deletePassword","editPassword","getProfile","editMode","setEditMode","newContent","setNewContent","userProfile","setUserProfile","fetchProfile","profile","error","console","handleEdit","passwordId","content","author","handleSaveEdit","renderEditButtons","password","id","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","concat","displayName","value","onChange","e","target","Number","timestamp","toLocaleString","split","style","display","document","querySelector","innerHTML","_c","$RefreshReg$"],"sources":["/home/nithin/Codes/Projects/PasswordManager/src/components/Passwords.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport moment from 'moment';\nmoment().utcOffset(330).format()\nimport \"../stylesheet/style.css\";\nimport deleteLogo from '../images/delete.png';\nimport editLogo from '../images/edit.png';\nimport saveLogo from '../images/save.png';\nimport cancelLogo from '../images/cancel.png';\nimport '../stylesheet/passwords.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\n\n\nconst Passwords = ({ passwords, account, deletePassword, editPassword, getProfile }) => {\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n  const [userProfile, setUserProfile] = useState(\"\");\n  useEffect(() => {\n    async function fetchProfile() {\n      if (account) {\n        try {\n          const profile = await getProfile(account);\n          setUserProfile(profile);\n        } catch (error) {\n          console.error(\"Error fetching profile:\", error);\n        }\n      }\n    }\n    fetchProfile();\n  }, [account, getProfile]);\n\n  const handleEdit = (passwordId, content, author) => {\n    if (author === account) {\n      setEditMode(passwordId);\n      setNewContent(content);\n    }\n  };\n\n  const handleSaveEdit = (passwordId, author) => {\n    if (author === account) {\n      editPassword(passwordId, newContent);\n      setEditMode(null);\n      setNewContent(\"\");\n    }\n  };\n\n  const renderEditButtons = (password) => {\n    if (editMode === password.id) {\n      return null; // Don't render edit and delete buttons during editing\n    } else {\n      return (\n        <div className=\"tweet-actions\">\n          <button onClick={() => handleEdit(password.id, password.content, password.author)}>\n            <img src={editLogo} alt=\"Edit\" />\n          </button>\n          <button onClick={() => deletePassword(password.id)}>\n            <img src={deleteLogo} alt=\"Delete\" />\n          </button>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div id=\"tweetsContainer\">\n      {passwords.map((password) => (\n        <div key={password.id} className=\"tweet\">\n          <img\n            className=\"user-icon\"\n            src={`https://api.multiavatar.com/${password.author}.svg`}\n            alt=\"User Icon\"\n          />\n          <div className=\"tweet-inner\">\n            <div className=\"author\">{password.displayName}</div>\n            {(editMode === password.id && password.author === account) ? (\n              <div className=\"editArea\">\n                <textarea\n                  value={newContent}\n                  onChange={(e) => setNewContent(e.target.value)}\n                />\n                <button onClick={() => handleSaveEdit(password.id, password.author)}>\n                  <img src={saveLogo} alt=\"Save\" />\n                </button>\n                <button onClick={() => setEditMode(null)}>\n                  <img src={cancelLogo} alt=\"Cancel\" />\n                </button>\n              </div>\n            ) : (\n              <>\n                <div className=\"content\">{password.content}</div>\n                <div className=\"date\">{new moment(Number(password.timestamp) * 1000).toLocaleString().split(' GMT')[0]}</div>\n                <div style={{display}}>{document.querySelector(\"#userAddress\").innerHTML=`Connected : ${userProfile}`}</div>\n              </>\n            )}\n          </div>\n          {account === password.author && renderEditButtons(password)}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Passwords;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}